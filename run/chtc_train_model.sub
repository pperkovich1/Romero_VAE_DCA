# submit file for VAEs in Pytorch
# TODO: make this consistent with other submit files
# TODO: variable capitalization is inconsistent

notification = Always
notify_user = jlwang5@wisc.edu

# Must set the universe to Docker
universe = docker
docker_image = romerolab/chtc:pytorch-nvidia-v16Dec19

# sends output to a subdirectory
initialdir = logs/$(Process)_$dataset
config = ../config.yaml
squid = http://proxy.chtc.wisc.edu/SQUID/jlwang5
# dataset = processed_cmx_uniref100_90_80_10_100.fasta

# set the log, error and output files
log = chtc_model_training_$(Process)_$(dataset).log
error = chtc_model_training_$(Process)_$(dataset).err
output = chtc_model_training_$(Process)_$(dataset).out


# set the executable to run
executable = chtc_train_model.sh
arguments = $(Cluster) $(Process) $(dataset) $(config)

# take our python script and data to the compute node
# staging tarball contains entire github repository
transfer_input_files = staging.tar.gz, chtc_root.txt, chtc_train_model.sh, modify_config.py, runmodel.sh,  $(squid)/$(dataset), $(squid)/vae_env.tar.gz

should_transfer_files = YES
when_to_transfer_output = ON_EXIT
  
# We must request 1 CPU in addition to 1 GPU (if needed)
request_cpus = 1

if ! defined DISABLE_GPU
# condor_submit was run from the command line like 
# condor_submit DISABLE_GPU=1 chtc_reweighting.sub
  request_gpus = 1
  # We require a machine with a modern version of the CUDA driver
  Requirements = (Target.CUDADriverVersion >= 10.1)

  +WantGPULab = true
  +GPUJobLength = "short"

endif

# select some memory and disk space
request_memory = 5GB
request_disk = 5GB

if ! defined DISABLE_FLOCKING
    +WantFlocking = false
endif

# Tell HTCondor to run on each dataset in datasets.txt
queue dataset from datasets.txt
